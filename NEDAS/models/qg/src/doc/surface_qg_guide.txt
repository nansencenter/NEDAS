
           Quich start guide for **Surface** QG model
           ******************************************

To make surface QG model, use make_suqg_xxx.  The model uses all the
same files as the QG model, except qg_driver.f90 and
qg_diagnostics.f90 are replaced by suqg_driver.f90 and
suqg_diagnostics.f90

Input files require that nz=1.  Use therm_drag instead of bot_drag
for a linear drag on temperature field.  Timeseries called
energy.bin contains Int( psi T ) and enstrophy.bin contains
Int( |T|^2 ) timeseries.  kes.bin contains spectrum of former.

Topography, tracer and quadratic drag options are all available
with same inputs as for QG model.

dt_tune can and should be set to a value in the range [1., 10.].
The default value is 1.5

An example for the Surface QG model is in exp/ex_su/, which sets the
model to the case of a uniform zonal flow over a gaussian mountain in
the center of the domain.  The initial state contains a tiny
perturbation vortex over the mountain (null initial perturbation
energy will not, of course, evolve). This corresponds very closely to
the run which produced Figure 4. of Held, Pierrehumbert, Garner and
Swanson, 1995: "Surface quasi-geostrophic dynamics", JFM, vol. 282,
1--20, only this one is at half their resolution.  (hence note the
fewer number of secondary vorticies which form on the
filament. Nevertheless, I suspect that there are more with the present
exponential cutoff filter than if the same resolution run was executed
with del^8(T) hyperviscosity, as used in the paper).

One can make a nice movie of the evolving temperature field for this 
run with the following commands in Matlab (beware that this requires
a chunk of memory though...):

cd to directory where output data is stored, and then:

>> getparams;                          % read in run parameters
>> k_ = sqrt(get_ksqd(kmax));          % make array of K = sqrt(kx^2 + ky^2)
>> for i = 2:101                       % skip the initial frame
psik = read_field('psi',nkx,nky,nz,i); 
tempk = -k_.*psik;                     % get spectral temperature field
temp(:,:,i) = spec2grid(tempk);        % get grid space field
end
>> plotfield(temp,100,'p','jet')       % plot last frame of field and..
>> cvec = caxis;                       %   ..get color axis from this one
>> x=linspace(-pi,pi,256);             % get axes for plot
>> figure                      % open fig window and set it to size you want
>> moviet = make_movie(temp,'p','jet',x,x,cvec);  % use jet colormap
>> movie(moviet,5,6)           % play movie 5 times at 6 frames/sec

(use help graph3d for list of colormap options if you don't like jet...)