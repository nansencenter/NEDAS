host: 'ipazia'   ##name of the host computer
nedas_dir: '/home/aydogdu/GIT/NEDAS' ##where NEDAS code is placed
work_dir: ${{ wd }}/nextsim_test   ##working directory for the experiment

home_dir: ${{ hd }}   ## home_dir
code_dir: '/home/aydogdu/GIT'           ##where model codes are stored
data_dir: '/home/aydogdu/DATA/data'     ##where dataset are stored
scratch_dir: '/home/aydogdu/DATA'       ##path to scratch disk space

nproc: 512        ##total number of processors
nproc_mem: 512    ##number of processor groups

nens: 100         ##ensemble size
run_assim: True   ##if true, run the assimilation steps

debug: False      ##if true, output debug data/message

time_start: '200701020000'       ##start time of the experiment, format ccyymmddHHMM
time_end: '200702200000'         ##end time of the experiment
time_assim_start: '200701020000' ##start time of the first analysis cycle
time_assim_end: '200702190000'   ##end time of the last analysis cycle
cycle_period: 12                 ##cycle period, in hours

time: '200701020000'
prev_time: '200701020000'
next_time: '200701021200'

###define analysis window relative to `time`, in hours
###Note: if obs_window_max-obs_window_min>cycle_period, there will be overlaps in obs
### for each cycle, so watch out for overfitting
##obs_window_min=-24
##obs_window_max=0
##obs_nt="1"  ##number of time steps in obs window, defined for each scale (nscale entries)
##t_scale="6"  ##characteristic time scale, hours, averaging window for the state valid at t

obs_time_steps: [0]
obs_time_scale: 0
state_time_steps: [0]
state_time_scale: 0

grid_def:
  type: 'custom'
  proj: '+proj=stere +a=6378273 +b=6356889.448910593 +lat_0=90 +lon_0=-45 +lat_ts=60'
  xmin: -2500000
  xmax: 2500000
  ymin: -2000000
  ymax: 2500000
  dx: 3000

state_def:
- name: 'seaice_conc'
  model_src: 'nextsim.v1'
  var_type: 'field'
  err_type: 'normal'

obs_def:
- name: 'seaice_conc'
  dataset_src: 'osisaf'
  model_src: 'nextsim.v1'
  obs_window_min: -6
  obs_window_max: 0
  err:
    type: 'normal'
    std: 0.2
  hroi: 100
  vroi: 2
  troi: 24
  impact_on_state:

use_synthetic_obs: False

###ensemble perturbation settings
#perturb_variables="seaice_drift ocean_surf_height"
##perturb_param_dir=$SCRATCH/perturb_param  ##where to find vars,hradius,tradius params

###physical parameters, ###set default values in namelist_<model>.sh first, if experiments frequently change a parameter, set it here

model_def:
  nextsim.v1:
    config_file: '/home/aydogdu/GIT/NEDAS/models/nextsim/v1/default.yml'
    nproc_per_mem: 16    ##number of processors to run a forecast
    walltime: 10000     ##walltime in seconds
    ens_run_type: scheduler
    perturb:
      # this is used to save the perturbation files (.npy format)
      path: '/home/foo'
      # atmosphere perturbation settings
      atmosphere:
        # at the moment we are dealing with only one file
        # specify the full path to the file
        # todo: add support for multiple forcing files
        filename: '/home/foo/25km_NH.ERA5_2010-01-01_2011-01-01.nc'
        # This is the time variable in the file used to locate the current forcing time
        # data is the group name in the file
        time_name: 'data/time'
        # time metadata in the file used to locate the current forcing time
        # this avoids the need to search the time variable and their unit in the file
        # todo: add support for changing time units
        time_units: 'seconds since 1970-01-01T00:00:00Z'
        # if we use this option, the wind perturbation is generated by the pressure perturbation
        # based on geostrophic balance
        geostrophic_wind_adjust:
          do_adjust: True
          # when press_wind_relate is True,
          # we need explicit specification of atmospehre wind and pressure variables
          # varname of u-component wind in forcing file
          u_name: 'u'
          # varname of v-component wind in forcing file
          v_name: 'v'
          # varname of pressure in forcing file
          press_name: 'pair'
          # varname of ||u|| wind in forcing file
          # if not such variable, set to None
          wind_amp_name: 'wind_speed'
          # perturbation amplitude for wind (sqrt(3))
          wind_pert_amp: 1.732050808
          type: 'gaussian_evensen'
          # perturbation amplitude for pressure this should consistent with the amplitude in 'all' section
          pres_pert_amp: 1.
          # horizontal and time scale of perturbation when press_wind_relate is True
          hcorr: 2.5e5
        # other variables being perturbed
        all:
          # the lists have 1-1 correspondence with other lists in this section
          # if geostrophic_wind_adjust is true, pressure field must be in names
          # and it should not have wind fields here (it will be useless anyway as the wind perturbation is from pressure perturbations)
          # if the variable is in the netCDF group of 'data', we need to provide the full path
          names: ['data/pair', 'data/sw_in', 'data/lw_in', 'data/dew2m', 'data/tair', ]
          # type of perturbation:
          # gaussian: perturbation methods following Evensen 1994 with Gaussian spectral phase shift
          # powerlaw: the amplitude of the perturbation is scaled by the power of the wavenumber
          # displace: generate a random wavenumber-1 displacement for the whole domain
          # gaussian_evensen: perturbation method strictly following Evensen 1994
          type: ['gaussian_evensen', 'gaussian_evensen', 'gaussian_evensen', 'gaussian_evensen', 'gaussian_evensen']
          # amplitude of the perturbation
          # sqrt(10), sqrt(50),
          amp: [3.16227766, 7.071067812, 7.071067812, 3., 3.]
          # horizontal correlation length scale in meters
          hcorr: [2.5e5, 2.5e5, 2.5e5, 2.5e5, 2.5e5]
          # time decorrelation scale in hours
          tcorr: [48, 48, 48, 48, 48]
          # the content of the bound list can either be a float or None
          # if it is None, the bound is not set
          # lower bounds of the data
          lower_bounds: [None, None, None, None, None]
          # upper bounds of the data
          upper_bounds: [None, None, None, None, None]
      ocean:
        filename: '/home/foo/25km_NH.TOPAZ4_2010-01-01_2011-01-01.nc'
        # This is the time variable in the file used to locate the current forcing time
        time_name: 'data/time'
        # time metadata in the file used to locate the current forcing time
        # this avoids the need to search the time variable and their unit in the file
        time_units: 'seconds since 1970-01-01T00:00:00Z'
        all:
          # the lists have 1-1 correspondence with other lists in this section
          variables: ['mld', 'sss', 'sst', 'u;v']
          # type of perturbation:
          # gaussian: perturbation methods following Evensen 1994 with Gaussian spectral phase shift
          # powerlaw: the amplitude of the perturbation is scaled by the power of the wavenumber
          # displace: generate a random wavenumber-1 displacement for the whole domain
          # gaussian_evensen: perturbation method strictly following Evensen 1994
          type: ['gaussian_evensen', 'gaussian_evensen', 'gaussian_evensen', 'gaussian_evensen']
          amp: [1., 1., 1., 1.]
          # horizontal correlation length scale in meters
          hcorr: [2.5e5, 2.5e5, 2.5e5, 2.5e5]
          # time decorrelation scale in hours
          tcorr: [48, 48, 48, 48]
          # lower bounds of the data
          lower_bounds: [None, 0., None, None]
          # upper bounds of the data
          upper_bounds: [None, None, None, None]

assim_mode: 'serial'
filter_type: 'EAKF'
regress_type: 'linear'
#run_align_space=false  ##if true, run alignment after filter update in space/time
#run_align_time=false

###number of scale components
###if > 1, use multiscale approach:
###  1. coarse-graining the analysis 4D grid [t, z, y, x] to save computational cost
###    since larger-scale components require smaller-dimensional grid to describe
###  2. separately defined smoothing length scales (H,Z,T) and localization, inflation
##`scale` indexes the nscale components
#nscale=1

inflate_type: ['relax']
inflate_coef: 1.0
relax_coef: 0.8
adaptive_inflation: False
adaptive_relaxation: True

###localization setting
localize_type: GC  ##GC, boxcar, adaptive

###Note: radius of influence (roi), distance where localization factor goes to zero
### roi=inf means no localization will be applied
### each observation variable has an individual set of roi, defined in obs_def
### for multiscale approach, the ROI is multiplied to a scaling factor which is
### defined here for each scale
#hroi_factor="1"
#vroi_factor="1"
#troi_factor="1"

###inflation setting
#inflate_type=post_fixed   ##prior_fixed, post_fixed, prior_adaptive, post_adaptive
#inflate_factor="1"  ##inflation factor for each scale

