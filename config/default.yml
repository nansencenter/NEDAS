host: 'betcy'
nproc: 128
nproc_mem: 128

exp_name: 'exp1'
nens: 8
run_assim: True

debug: False

time_start: '202301010000'
time_end: '202301310000'
time_assim_start: '202301030000'
time_assim_end: '202301250000'
cycle_period: 168

###define analysis window relative to `time`, in hours
###Note: if obs_window_max-obs_window_min>cycle_period, there will be overlaps in obs
### for each cycle, so watch out for overfitting
##obs_window_min=-24
##obs_window_max=0
##obs_nt="1"  ##number of time steps in obs window, defined for each scale (nscale entries)
##t_scale="6"  ##characteristic time scale, hours, averaging window for the state valid at t

###time steps for obs and state for each analysis cycle
#obs_time_steps="0"
#state_time_steps="0"

#grid:
#  type: 'custom'
#  proj: '+proj=stere'
#  xmin: 0
#  xmax: 100
#  ymin: 0
#  ymax: 100
#  dx: 1
###mask: area in the reference grid that is land or other area that doesn't require analysis,
###      fields[y,x] will have NaN in those area, binfiles will only store the unmasked region,
###      the local analysis routine will also skip masked region to evenly distribute work load.
### the variable mask points to a npz file with 'x', 'y' as a high-res grid defined on proj
### and 'mask' is int[ny,nx] with 1 for masked grid points and 0 for unmasked.
##maskfile=$SCRATCH/mask.npz

state_def:
  - name: 'velocity'
    model_src: 'qg'
    var_type: 'field'
    err_type: 'normal'

obs_def:
  - name: 'velocity'
    dataset_src: 'qg'
    model_src: 'qg'
    obs_window_min: -6
    obs_window_max: 0
    err_type: 'normal'
    err_std: 0.5

use_synthetic_obs: False

###ensemble perturbation settings
#perturb_variables="seaice_drift ocean_surf_height"
##perturb_param_dir=$SCRATCH/perturb_param  ##where to find vars,hradius,tradius params

###physical parameters, ###set default values in namelist_<model>.sh first, if experiments frequently change a parameter, set it here

model_def:
  - name: 'qg'


assim_mode: 'serial'
filter_type: 'EAKF'
regress_type: 'linear'
#run_align_space=false  ##if true, run alignment after filter update in space/time
#run_align_time=false

###number of scale components
###if > 1, use multiscale approach:
###  1. coarse-graining the analysis 4D grid [t, z, y, x] to save computational cost
###    since larger-scale components require smaller-dimensional grid to describe
###  2. separately defined smoothing length scales (H,Z,T) and localization, inflation
##`scale` indexes the nscale components
#nscale=1

###localization setting
#localize_type=GC  ##GC, boxcar, adaptive
###Note: radius of influence (roi), distance where localization factor goes to zero
### roi=inf means no localization will be applied
### each observation variable has an individual set of roi, defined in obs_def
### for multiscale approach, the ROI is multiplied to a scaling factor which is
### defined here for each scale
#hroi_factor="1"
#vroi_factor="1"
#troi_factor="1"

###inflation setting
#inflate_type=post_fixed   ##prior_fixed, post_fixed, prior_adaptive, post_adaptive
#inflate_factor="1"  ##inflation factor for each scale

