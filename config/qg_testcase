####All settings and their default values

##experiment name
exp_name=qg_testcase

##load HPC-specific settings, directory names, env, etc.
. $HOME/code/NEDAS/config/env/betzy/base.src

script_dir=$HOME/code/NEDAS/scripts
code_dir=$HOME/code
data_dir=$SCRATCH/data
work_dir=$SCRATCH/$exp_name

#ensemble size, number of members (model runs, realizations, etc.)
nens=100

##parallel scheme
nproc=128
nproc_mem=32

#DA scheme
assim_mode=batch ##batch or serial
filter_type=ETKF
regress_type=linear

run_assim=true  ##if true, run filter/smoother update algorithms
run_align_time=false
run_align_space=false

##number of scale components
##if > 1, use multiscale approach:
##  1. coarse-graining the analysis 4D grid [t, z, y, x] to save computational cost
##    since larger-scale components require smaller-dimensional grid to describe
##  2. separately defined smoothing length scales (H,Z,T) and localization, inflation
#`scale` indexes the nscale components
nscale=1

##localization setting
localize_type=GC  ##GC, boxcar, adaptive
##Note: radius of influence (roi), distance where localization factor goes to zero
## roi=inf means no localization will be applied
## each observation variable has an individual set of roi, defined in obs_def
## for multiscale approach, the ROI is multiplied to a scaling factor which is
## defined here for each scale
hroi_factor="1"
vroi_factor="1"
troi_factor="1"

##inflation setting
inflate_type=post_fixed   ##prior_fixed, post_fixed, prior_adaptive, post_adaptive
inflate_factor="1"  ##inflation factor for each scale

##time period and cycling
time_start=200101010000    ##format ccyymmddHHMM
time_end=200101250000
time_assim_start=200101050000
time_assim_end=200101220000
cycle_period=6  ##in hours
##Assimilation (filter update, displacement, etc.) starts at time_assim_start
##`time` points to the current cycle time
##`next_time`/`prev_time` points to the next/previous cycle time

##define analysis window relative to `time`, in hours
##Note: if obs_window_max-obs_window_min>cycle_period, there will be overlaps in obs
## for each cycle, so watch out for overfitting
#obs_window_min=-1
#obs_window_max=0
#obs_nt="1"  ##number of time steps in obs window, defined for each scale (nscale entries)
#t_scale="1"  ##characteristic time scale, hours, averaging window for the state valid at t

##time steps for obs and state for each analysis cycle
obs_time_steps="0"
state_time_steps="0"

##define a reference coordinate system where analysis takes place
##you can use model modules to provide the grid (analysis grid is same as model grid)
grid_type=qg  ##model module

##define the `state` in a multi-line string
##  one state variable per line, each line contains:
##     variable name
##     source module, one of the models/ module that provides the state variable
##     error type, normal/lognormal
state_def=$(cat << EOF
velocity  qg  field  normal
EOF
)

##parameter estimation
##just add model parameters as scalar state variables above

##define the `obs` in a multi-line string
##  one observation per line, each line contains:
##      obs variable name
##      source, dataset module that provides this obs variable
##      model, models module that provides this obs prior
##      error type, normal/lognormal/beta
##      error standard deviation
##      error horizontal correlation length, in meters
##      error vertical correlation length, in meters
##      error time correlation length, in hours
##      error correlation among variables, list of "<variable name>=<corr coef>" separated by ',', if not specified, default is uncorrelated
##      horizontal localization distance, in meters
##      vertical localization distance, in meters
##      time localization distance, in hours
##      obs impact factor, list of "<state variable name>=<its impact factor>" separated by ','; if not specified, default is impact=1 for all unlisted state variables.
obs_def=$(cat << EOF
velocity  qg  qg  -6  0  normal  2.0  0  0  0  none  20  10  10  none
EOF
)
use_synthetic_obs=true

##ensemble perturbation settings
perturb_variables="velocity"

##physical parameters, ###set default values in namelist_<model>.sh first, if experiments frequently change a parameter, set it here
kmax=127
nz=8
dt=0.0005
F=100
beta=20
e_o=1
k_o=1
delk=3
m_o=0
z_o=0
strat_type=stc
deltc=0.1
ubar_type=stc
delu=0.1
uscale=0.1
k_cut=100
bot_drag=0.3

state_type=velocity  ##velocity, streamfunc, or vorticity

debug=false

