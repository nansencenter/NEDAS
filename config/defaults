####All settings and their default values
###Note: in bash, everything is treated as strings, and we only do integer arithmetics

##experiment name, the working directory is $SCRATCH/$EXP_NAME
EXP_NAME=test

##load HPC-specific settings, directory names, env, etc.
. $HOME/code/NEDAS/config/env/betzy/base.src

#ensemble size, number of members (model runs, realizations, etc.)
NUM_ENS=32

#DA scheme
RUN_FILTER=true
FILTER_TYPE=ETKF  ##ETKF, ENSRF, RHF, PF

RUN_ALIGNMENT=false  ##if true, run alignment after filter update

##number of scale components
##if > 1, use multiscale approach:
##  1. coarse-graining the analysis 4D grid [t, z, y, x] to save computational cost
##    since larger-scale components require smaller-dimensional grid to describe
##  2. separately defined smoothing length scales (H,Z,T) and localization, inflation
NUM_SCALES=1
## characteristic horizontal H, vertical Z and time T scales (in their own units)
HSCALE="20000" ##meters
ZSCALE="100"  ##meters
TSCALE="360"  ##minutes

##localization setting
LOCAL_TYPE=GC  ##GC, boxcar, adaptive
##Note: ROI radius of influence, distance where localization factor goes to zero
## ROI=inf means no localization will be applied
## each observation variable has an individual set of ROI, defined in OBS_DEF
## for multiscale approach, the ROI is multiplied to a scaling factor which is
## defined here for each scale
HROI_FAC="1"
ZROI_FAC="1"
TROI_FAC="1"

##inflation setting
INFL_TYPE=post_fixed   ##prior_fixed, post_fixed, prior_adaptive, post_adaptive
INFL_FAC="1"  ##inflation factor for each scale

##time period and cycling
DATE_START=200701010000    ##format ccyymmddHHMM
DATE_END=200702210000
DATE_CYCLE_START=200701200000
DATE_CYCLE_END=200702150000
CYCLE_PERIOD=360 ##in minutes
##DATE goes from DATE_START to DATE_END, with interval of CYCLE_PERIOD
##Assimilation (filter update, displacement, etc.) starts at DATE_CYCLE_START
##NEXTDATE and PREVDATE points to the next/previous cycle DATE

##define analysis window relative to DATE, in minutes
##Note: if WINDOW_MAX-WINDOW_MIN > CYCLE_PERIOD, there will be overlaps in observations
## for each cycle, so watch out for overfitting
WINDOW_MIN=-240
WINDOW_MAX=120
NT="1"  ##number of time slots in analysis window, defined for each scale (NUM_SCALES)
##Offset time slots provide prior states at time closer to the observations (FGAT);
##iterative smoother will update states in each time slot with new intermediate forecasts
##Given NT for one of NUM_SCALES, the following can be derived
##DT=(WINDOW_MAX-WINDOW_MIN)/NT) is the invertal for each time slot
##T_LEVELS=`seq WINDOW_MIN DT WINDOW_MAX`

##define a reference coordinate system where analysis takes place
##map projection is defined as a proj.4 string, see https://proj.org/usage/projections.html
PROJ="+proj=stere +a=6378273 +b=6356889.448910593 +lat_0=90 +lon_0=-45 +lat_ts=60"

##horizontal grid dimensions
DX="20000"  ##grid spacing (meter) for each scale (NUM_SCALES)
XMIN=-2500000  ##start,end x coordinates (meter)
XMAX=2500000
YMIN=-2000000  ##start,end y coordinates (meter)
YMAX=2500000
##Given DX for one of NUM_SCALES, NX=(XMAX-XMIN)/DX and NY=(YMAX-YMIN)/DX

##vertical dimension
##Note: index 0 means surface, negative for ocean layers, positive for atmos layers
DZ="1"  ## interval in z index for each scale (NUM_SCALES)
ZMIN=-50
ZMAX=0
##Given DZ for one of NUM_SCALES, Z_LEVELS=`seq ZMIN DZ ZMAX`
##after coarse-graining the fields defined on level k will be the
##averaged fields from level k to k+DZ

##define the `state` in a multiline string
##  one state variable per line, each line contains:
##     variable name, defined in assim_tools/state
##     source module, one of the models/ module that provides the state variable
##     dtype, float/double/int
##     error type, normal/lognormal/beta
##     dt, in minutes, model output interval
##     z index start, native vertical layers in model,
##     z index end
STATE_DEF=$(cat << EOF
seaice_drift        nextsim  double  normal   180    0  0
seaice_conc         nextsim  double  normal   180    0  0
seaice_thick        nextsim  double  normal   180    0  0
seaice_damage       nextsim  double  normal   180    0  0
ocean_velocity      topaz    float   normal  1440  -50 -1
ocean_temp          topaz    float   normal  1440  -50 -1
ocean_surf_height   topaz    float   normal  1440    0  0
EOF
)

##definite the `obs` in a multiline string
##  one observation per line, each line contains:
##      obs variable name, defined in assim_tools/obs
##      source module, one of the dataset/ modules that provides the obs variable
##      dtype, float/double/int
##      error type, normal/lognormal/beta
##      error, standard deviation
##      horizontal localization distance, meter
##      vertical localization distance, in z_units
##      time localization distance, hour
##      obs impact factor, list of "<state variable name>=<its impact factor>" separately by space
##                         unlisted state variables have default impact of 1.
OBS_DEF=$(cat << EOF
seaice_deform     synthetic  float  normal  0.01  200000  100  0  ocean_velocity=0 ocean_temp=0
ocean_surf_temp   synthetic  float  normal   0.1  200000  100  0
ocean_temp        synthetic  float  normal   0.3  200000  100  0
EOF
)

##ensemble perturbation settings
PERTURB_VARIABLES="seaice_drift ocean_surf_height"
#PERTURB_PARAM_DIR=$SCRATCH/perturb_param  ##where to find vars,hradius,tradius params

##physical parameters, ###set default values in namelist_<model>.sh first, if experiments frequently change a parameter, set it here

